@* Définir le Model *@
@model IEnumerable<Actor>
@* Définir le data *@
@{
    ViewData["Title"] = "Liste des Acteurs";
}

<div class="row">
    <table class="table">
        <thead>
            <tr class="text-center">
                <th scope="col">@Html.DisplayNameFor(model => model.ProfilePictureUrl)</th>
                <th scope="col">@Html.DisplayNameFor(model => model.FullName) </th>
                <th scope="col">@Html.DisplayNameFor(model => model.Bio) </th>
                <th scope="col"> Actions </th>
            </tr>
        </thead>
        <tbody>
            @foreach(var item in Model )
            {
                <tr class="text-center">
                    <td class=" align-middle">
                        <img class="rounded-circle" src="@item.ProfilePictureUrl" alt="@item.FullName" style="max-width: 150px"/>
                    </td>
                    <td class=" align-middle">@Html.DisplayFor(modelItem => item.FullName)</td>
                    <td class=" align-middle">@Html.DisplayFor(modelItem => item.Bio)</td>
                    <td class=" align-middle">
                        <a class="btn btn-secondary" asp-controller="Actors" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil-square"> </i>Modifier</a>
                        <a class="btn btn-info" asp-controller="Actors" asp-action="Details" asp-route-id="@item.Id"><i class="bi bi-eye"> </i>Details</a>
                        <a class="btn btn-danger text-white" asp-controller="Actors" asp-action="Delete" asp-route-id="@item.Id"><i class="bi bi-trash"> </i>Supprimer</a>
                    </td>
                </tr>
            }
            
        </tbody>
    </table>

</div >
@await Html.PartialAsync("_CreateItem", "Actors")

